#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Viagens
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AgTur")]
	public partial class ViagensDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertPais(Pais instance);
    partial void UpdatePais(Pais instance);
    partial void DeletePais(Pais instance);
    partial void InsertPassageiro(Passageiro instance);
    partial void UpdatePassageiro(Passageiro instance);
    partial void DeletePassageiro(Passageiro instance);
    partial void InsertProduto(Produto instance);
    partial void UpdateProduto(Produto instance);
    partial void DeleteProduto(Produto instance);
    partial void InsertTipoProduto(TipoProduto instance);
    partial void UpdateTipoProduto(TipoProduto instance);
    partial void DeleteTipoProduto(TipoProduto instance);
    partial void InsertTipoPagamento(TipoPagamento instance);
    partial void UpdateTipoPagamento(TipoPagamento instance);
    partial void DeleteTipoPagamento(TipoPagamento instance);
    partial void InsertMotivoViagem(MotivoViagem instance);
    partial void UpdateMotivoViagem(MotivoViagem instance);
    partial void DeleteMotivoViagem(MotivoViagem instance);
    partial void InsertFornecedor(Fornecedor instance);
    partial void UpdateFornecedor(Fornecedor instance);
    partial void DeleteFornecedor(Fornecedor instance);
    partial void InsertTipoFornecedor(TipoFornecedor instance);
    partial void UpdateTipoFornecedor(TipoFornecedor instance);
    partial void DeleteTipoFornecedor(TipoFornecedor instance);
    partial void InsertTipoMoeda(TipoMoeda instance);
    partial void UpdateTipoMoeda(TipoMoeda instance);
    partial void DeleteTipoMoeda(TipoMoeda instance);
    partial void InsertParcela(Parcela instance);
    partial void UpdateParcela(Parcela instance);
    partial void DeleteParcela(Parcela instance);
    partial void InsertFormaPagamento(FormaPagamento instance);
    partial void UpdateFormaPagamento(FormaPagamento instance);
    partial void DeleteFormaPagamento(FormaPagamento instance);
    partial void InsertSituacaoParcela(SituacaoParcela instance);
    partial void UpdateSituacaoParcela(SituacaoParcela instance);
    partial void DeleteSituacaoParcela(SituacaoParcela instance);
    partial void InsertContatoCliente(ContatoCliente instance);
    partial void UpdateContatoCliente(ContatoCliente instance);
    partial void DeleteContatoCliente(ContatoCliente instance);
    partial void InsertSituacaoVenda(SituacaoVenda instance);
    partial void UpdateSituacaoVenda(SituacaoVenda instance);
    partial void DeleteSituacaoVenda(SituacaoVenda instance);
    partial void InsertMotivoCancelamento(MotivoCancelamento instance);
    partial void UpdateMotivoCancelamento(MotivoCancelamento instance);
    partial void DeleteMotivoCancelamento(MotivoCancelamento instance);
    partial void InsertTipoReembolso(TipoReembolso instance);
    partial void UpdateTipoReembolso(TipoReembolso instance);
    partial void DeleteTipoReembolso(TipoReembolso instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertVenda(Venda instance);
    partial void UpdateVenda(Venda instance);
    partial void DeleteVenda(Venda instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertHistoricoVenda(HistoricoVenda instance);
    partial void UpdateHistoricoVenda(HistoricoVenda instance);
    partial void DeleteHistoricoVenda(HistoricoVenda instance);
    #endregion
		
		public ViagensDataContext() : 
				base(global::Viagens.Properties.Settings.Default.AgTurConnectionString9, mappingSource)
		{
			OnCreated();
		}
		
		public ViagensDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ViagensDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ViagensDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ViagensDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cidade> Cidades
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Pais> Pais
		{
			get
			{
				return this.GetTable<Pais>();
			}
		}
		
		public System.Data.Linq.Table<Passageiro> Passageiros
		{
			get
			{
				return this.GetTable<Passageiro>();
			}
		}
		
		public System.Data.Linq.Table<Produto> Produtos
		{
			get
			{
				return this.GetTable<Produto>();
			}
		}
		
		public System.Data.Linq.Table<TipoProduto> TipoProdutos
		{
			get
			{
				return this.GetTable<TipoProduto>();
			}
		}
		
		public System.Data.Linq.Table<TipoPagamento> TipoPagamentos
		{
			get
			{
				return this.GetTable<TipoPagamento>();
			}
		}
		
		public System.Data.Linq.Table<MotivoViagem> MotivoViagems
		{
			get
			{
				return this.GetTable<MotivoViagem>();
			}
		}
		
		public System.Data.Linq.Table<Fornecedor> Fornecedors
		{
			get
			{
				return this.GetTable<Fornecedor>();
			}
		}
		
		public System.Data.Linq.Table<TipoFornecedor> TipoFornecedors
		{
			get
			{
				return this.GetTable<TipoFornecedor>();
			}
		}
		
		public System.Data.Linq.Table<V_Cidade> V_Cidades
		{
			get
			{
				return this.GetTable<V_Cidade>();
			}
		}
		
		public System.Data.Linq.Table<V_ContatoCliente> V_ContatoClientes
		{
			get
			{
				return this.GetTable<V_ContatoCliente>();
			}
		}
		
		public System.Data.Linq.Table<V_Passageiro> V_Passageiros
		{
			get
			{
				return this.GetTable<V_Passageiro>();
			}
		}
		
		public System.Data.Linq.Table<V_Venda> V_Vendas
		{
			get
			{
				return this.GetTable<V_Venda>();
			}
		}
		
		public System.Data.Linq.Table<TipoMoeda> TipoMoedas
		{
			get
			{
				return this.GetTable<TipoMoeda>();
			}
		}
		
		public System.Data.Linq.Table<Parcela> Parcelas
		{
			get
			{
				return this.GetTable<Parcela>();
			}
		}
		
		public System.Data.Linq.Table<FormaPagamento> FormaPagamentos
		{
			get
			{
				return this.GetTable<FormaPagamento>();
			}
		}
		
		public System.Data.Linq.Table<SituacaoParcela> SituacaoParcelas
		{
			get
			{
				return this.GetTable<SituacaoParcela>();
			}
		}
		
		public System.Data.Linq.Table<ContatoCliente> ContatoClientes
		{
			get
			{
				return this.GetTable<ContatoCliente>();
			}
		}
		
		public System.Data.Linq.Table<SituacaoVenda> SituacaoVendas
		{
			get
			{
				return this.GetTable<SituacaoVenda>();
			}
		}
		
		public System.Data.Linq.Table<MotivoCancelamento> MotivoCancelamentos
		{
			get
			{
				return this.GetTable<MotivoCancelamento>();
			}
		}
		
		public System.Data.Linq.Table<TipoReembolso> TipoReembolsos
		{
			get
			{
				return this.GetTable<TipoReembolso>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Venda> Vendas
		{
			get
			{
				return this.GetTable<Venda>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Clientes
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<HistoricoVenda> HistoricoVendas
		{
			get
			{
				return this.GetTable<HistoricoVenda>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidades")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdCidade;
		
		private string _Nome;
		
		private long _IdPais;
		
		private string _Estado;
		
		private string _DDD;
		
		private EntitySet<Fornecedor> _Fornecedors;
		
		private EntitySet<Venda> _Vendas;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntityRef<Pais> _Paise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCidadeChanging(long value);
    partial void OnIdCidadeChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdPaisChanging(long value);
    partial void OnIdPaisChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnDDDChanging(string value);
    partial void OnDDDChanged();
    #endregion
		
		public Cidade()
		{
			this._Fornecedors = new EntitySet<Fornecedor>(new Action<Fornecedor>(this.attach_Fornecedors), new Action<Fornecedor>(this.detach_Fornecedors));
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Paise = default(EntityRef<Pais>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", DbType="BigInt NOT NULL")]
		public long IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					if (this._Paise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPaisChanging(value);
					this.SendPropertyChanging();
					this._IdPais = value;
					this.SendPropertyChanged("IdPais");
					this.OnIdPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDD", DbType="VarChar(2)")]
		public string DDD
		{
			get
			{
				return this._DDD;
			}
			set
			{
				if ((this._DDD != value))
				{
					this.OnDDDChanging(value);
					this.SendPropertyChanging();
					this._DDD = value;
					this.SendPropertyChanged("DDD");
					this.OnDDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Fornecedor", Storage="_Fornecedors", ThisKey="IdCidade", OtherKey="IdCidade")]
		public EntitySet<Fornecedor> Fornecedors
		{
			get
			{
				return this._Fornecedors;
			}
			set
			{
				this._Fornecedors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Venda", Storage="_Vendas", ThisKey="IdCidade", OtherKey="IdCidade")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Cliente", Storage="_Clientes", ThisKey="IdCidade", OtherKey="IdCidade")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Cidade", Storage="_Paise", ThisKey="IdPais", OtherKey="IdPais", IsForeignKey=true)]
		public Pais Pais
		{
			get
			{
				return this._Paise.Entity;
			}
			set
			{
				Pais previousValue = this._Paise.Entity;
				if (((previousValue != value) 
							|| (this._Paise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paise.Entity = null;
						previousValue.Cidades.Remove(this);
					}
					this._Paise.Entity = value;
					if ((value != null))
					{
						value.Cidades.Add(this);
						this._IdPais = value.IdPais;
					}
					else
					{
						this._IdPais = default(long);
					}
					this.SendPropertyChanged("Pais");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fornecedors(Fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Fornecedors(Fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paises")]
	public partial class Pais : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdPais;
		
		private string _Nome;
		
		private string _DDI;
		
		private EntitySet<Cidade> _Cidades;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaisChanging(long value);
    partial void OnIdPaisChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDDIChanging(string value);
    partial void OnDDIChanged();
    #endregion
		
		public Pais()
		{
			this._Cidades = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidades), new Action<Cidade>(this.detach_Cidades));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					this.OnIdPaisChanging(value);
					this.SendPropertyChanging();
					this._IdPais = value;
					this.SendPropertyChanged("IdPais");
					this.OnIdPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDI", DbType="VarChar(3)")]
		public string DDI
		{
			get
			{
				return this._DDI;
			}
			set
			{
				if ((this._DDI != value))
				{
					this.OnDDIChanging(value);
					this.SendPropertyChanging();
					this._DDI = value;
					this.SendPropertyChanged("DDI");
					this.OnDDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pais_Cidade", Storage="_Cidades", ThisKey="IdPais", OtherKey="IdPais")]
		public EntitySet<Cidade> Cidades
		{
			get
			{
				return this._Cidades;
			}
			set
			{
				this._Cidades.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Pais = this;
		}
		
		private void detach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Pais = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passageiros")]
	public partial class Passageiro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdVenda;
		
		private long _IdPassageiro;
		
		private int _IdCategoria;
		
		private EntityRef<Venda> _Venda;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVendaChanging(long value);
    partial void OnIdVendaChanged();
    partial void OnIdPassageiroChanging(long value);
    partial void OnIdPassageiroChanged();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    #endregion
		
		public Passageiro()
		{
			this._Venda = default(EntityRef<Venda>);
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVendaChanging(value);
					this.SendPropertyChanging();
					this._IdVenda = value;
					this.SendPropertyChanged("IdVenda");
					this.OnIdVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPassageiro", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long IdPassageiro
		{
			get
			{
				return this._IdPassageiro;
			}
			set
			{
				if ((this._IdPassageiro != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPassageiroChanging(value);
					this.SendPropertyChanging();
					this._IdPassageiro = value;
					this.SendPropertyChanged("IdPassageiro");
					this.OnIdPassageiroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Passageiro", Storage="_Venda", ThisKey="IdVenda", OtherKey="IdVenda", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.Passageiros.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.Passageiros.Add(this);
						this._IdVenda = value.IdVenda;
					}
					else
					{
						this._IdVenda = default(long);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Passageiro", Storage="_Cliente", ThisKey="IdPassageiro", OtherKey="IDCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Passageiros.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Passageiros.Add(this);
						this._IdPassageiro = value.IDCliente;
					}
					else
					{
						this._IdPassageiro = default(long);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Produtos")]
	public partial class Produto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdProduto;
		
		private string _Nome;
		
		private string _Descricao;
		
		private long _IdTipoProduto;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProdutoChanging(long value);
    partial void OnIdProdutoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnIdTipoProdutoChanging(long value);
    partial void OnIdTipoProdutoChanged();
    #endregion
		
		public Produto()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoProduto", DbType="BigInt NOT NULL")]
		public long IdTipoProduto
		{
			get
			{
				return this._IdTipoProduto;
			}
			set
			{
				if ((this._IdTipoProduto != value))
				{
					this.OnIdTipoProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoProduto = value;
					this.SendPropertyChanged("IdTipoProduto");
					this.OnIdTipoProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Venda", Storage="_Vendas", ThisKey="IdProduto", OtherKey="IdProduto")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Produto = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Produto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProduto")]
	public partial class TipoProduto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTipoProduto;
		
		private string _Nome;
		
		private string _Descricao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoProdutoChanging(long value);
    partial void OnIdTipoProdutoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    #endregion
		
		public TipoProduto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoProduto", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTipoProduto
		{
			get
			{
				return this._IdTipoProduto;
			}
			set
			{
				if ((this._IdTipoProduto != value))
				{
					this.OnIdTipoProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoProduto = value;
					this.SendPropertyChanged("IdTipoProduto");
					this.OnIdTipoProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoPagamento")]
	public partial class TipoPagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTipoPagamento;
		
		private string _Nome;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoPagamentoChanging(long value);
    partial void OnIdTipoPagamentoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public TipoPagamento()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoPagamento", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTipoPagamento
		{
			get
			{
				return this._IdTipoPagamento;
			}
			set
			{
				if ((this._IdTipoPagamento != value))
				{
					this.OnIdTipoPagamentoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoPagamento = value;
					this.SendPropertyChanged("IdTipoPagamento");
					this.OnIdTipoPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MotivoViagem")]
	public partial class MotivoViagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdMotivoViagem;
		
		private string _Motivo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMotivoViagemChanging(long value);
    partial void OnIdMotivoViagemChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public MotivoViagem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMotivoViagem", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdMotivoViagem
		{
			get
			{
				return this._IdMotivoViagem;
			}
			set
			{
				if ((this._IdMotivoViagem != value))
				{
					this.OnIdMotivoViagemChanging(value);
					this.SendPropertyChanging();
					this._IdMotivoViagem = value;
					this.SendPropertyChanged("IdMotivoViagem");
					this.OnIdMotivoViagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fornecedores")]
	public partial class Fornecedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdFornecedor;
		
		private string _Nome;
		
		private System.Nullable<long> _IdCidade;
		
		private System.Nullable<decimal> _Comissao;
		
		private string _email;
		
		private string _Telefone;
		
		private string _Endereco;
		
		private string _Numero;
		
		private string _CEP;
		
		private string _Comentarios;
		
		private string _Complemento;
		
		private long _IdTipoFornecedor;
		
		private EntitySet<Venda> _Vendas;
		
		private EntitySet<Venda> _Vendas1;
		
		private EntityRef<Cidade> _Cidade;
		
		private EntityRef<TipoFornecedor> _TipoFornecedor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFornecedorChanging(long value);
    partial void OnIdFornecedorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdCidadeChanging(System.Nullable<long> value);
    partial void OnIdCidadeChanged();
    partial void OnComissaoChanging(System.Nullable<decimal> value);
    partial void OnComissaoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnEnderecoChanging(string value);
    partial void OnEnderecoChanged();
    partial void OnNumeroChanging(string value);
    partial void OnNumeroChanged();
    partial void OnCEPChanging(string value);
    partial void OnCEPChanged();
    partial void OnComentariosChanging(string value);
    partial void OnComentariosChanged();
    partial void OnComplementoChanging(string value);
    partial void OnComplementoChanged();
    partial void OnIdTipoFornecedorChanging(long value);
    partial void OnIdTipoFornecedorChanged();
    #endregion
		
		public Fornecedor()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			this._Vendas1 = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas1), new Action<Venda>(this.detach_Vendas1));
			this._Cidade = default(EntityRef<Cidade>);
			this._TipoFornecedor = default(EntityRef<TipoFornecedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFornecedor", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdFornecedor
		{
			get
			{
				return this._IdFornecedor;
			}
			set
			{
				if ((this._IdFornecedor != value))
				{
					this.OnIdFornecedorChanging(value);
					this.SendPropertyChanging();
					this._IdFornecedor = value;
					this.SendPropertyChanged("IdFornecedor");
					this.OnIdFornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt")]
		public System.Nullable<long> IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comissao", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> Comissao
		{
			get
			{
				return this._Comissao;
			}
			set
			{
				if ((this._Comissao != value))
				{
					this.OnComissaoChanging(value);
					this.SendPropertyChanging();
					this._Comissao = value;
					this.SendPropertyChanged("Comissao");
					this.OnComissaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(50)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereco", DbType="VarChar(150)")]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this.OnEnderecoChanging(value);
					this.SendPropertyChanging();
					this._Endereco = value;
					this.SendPropertyChanged("Endereco");
					this.OnEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="VarChar(10)")]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEP", DbType="VarChar(9)")]
		public string CEP
		{
			get
			{
				return this._CEP;
			}
			set
			{
				if ((this._CEP != value))
				{
					this.OnCEPChanging(value);
					this.SendPropertyChanging();
					this._CEP = value;
					this.SendPropertyChanged("CEP");
					this.OnCEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this.OnComentariosChanging(value);
					this.SendPropertyChanging();
					this._Comentarios = value;
					this.SendPropertyChanged("Comentarios");
					this.OnComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Complemento", DbType="VarChar(150)")]
		public string Complemento
		{
			get
			{
				return this._Complemento;
			}
			set
			{
				if ((this._Complemento != value))
				{
					this.OnComplementoChanging(value);
					this.SendPropertyChanging();
					this._Complemento = value;
					this.SendPropertyChanged("Complemento");
					this.OnComplementoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoFornecedor", DbType="BigInt NOT NULL")]
		public long IdTipoFornecedor
		{
			get
			{
				return this._IdTipoFornecedor;
			}
			set
			{
				if ((this._IdTipoFornecedor != value))
				{
					if (this._TipoFornecedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoFornecedorChanging(value);
					this.SendPropertyChanging();
					this._IdTipoFornecedor = value;
					this.SendPropertyChanged("IdTipoFornecedor");
					this.OnIdTipoFornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornecedor_Venda", Storage="_Vendas", ThisKey="IdFornecedor", OtherKey="IdOperadora")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornecedor_Venda1", Storage="_Vendas1", ThisKey="IdFornecedor", OtherKey="IdHotel")]
		public EntitySet<Venda> Vendas1
		{
			get
			{
				return this._Vendas1;
			}
			set
			{
				this._Vendas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Fornecedor", Storage="_Cidade", ThisKey="IdCidade", OtherKey="IdCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Fornecedors.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Fornecedors.Add(this);
						this._IdCidade = value.IdCidade;
					}
					else
					{
						this._IdCidade = default(Nullable<long>);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoFornecedor_Fornecedor", Storage="_TipoFornecedor", ThisKey="IdTipoFornecedor", OtherKey="IdTipoFornecedor", IsForeignKey=true)]
		public TipoFornecedor TipoFornecedor
		{
			get
			{
				return this._TipoFornecedor.Entity;
			}
			set
			{
				TipoFornecedor previousValue = this._TipoFornecedor.Entity;
				if (((previousValue != value) 
							|| (this._TipoFornecedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoFornecedor.Entity = null;
						previousValue.Fornecedors.Remove(this);
					}
					this._TipoFornecedor.Entity = value;
					if ((value != null))
					{
						value.Fornecedors.Add(this);
						this._IdTipoFornecedor = value.IdTipoFornecedor;
					}
					else
					{
						this._IdTipoFornecedor = default(long);
					}
					this.SendPropertyChanged("TipoFornecedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Fornecedor = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Fornecedor = null;
		}
		
		private void attach_Vendas1(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Fornecedor1 = this;
		}
		
		private void detach_Vendas1(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Fornecedor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoFornecedor")]
	public partial class TipoFornecedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTipoFornecedor;
		
		private string _Nome;
		
		private EntitySet<Fornecedor> _Fornecedors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoFornecedorChanging(long value);
    partial void OnIdTipoFornecedorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public TipoFornecedor()
		{
			this._Fornecedors = new EntitySet<Fornecedor>(new Action<Fornecedor>(this.attach_Fornecedors), new Action<Fornecedor>(this.detach_Fornecedors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoFornecedor", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTipoFornecedor
		{
			get
			{
				return this._IdTipoFornecedor;
			}
			set
			{
				if ((this._IdTipoFornecedor != value))
				{
					this.OnIdTipoFornecedorChanging(value);
					this.SendPropertyChanging();
					this._IdTipoFornecedor = value;
					this.SendPropertyChanged("IdTipoFornecedor");
					this.OnIdTipoFornecedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoFornecedor_Fornecedor", Storage="_Fornecedors", ThisKey="IdTipoFornecedor", OtherKey="IdTipoFornecedor")]
		public EntitySet<Fornecedor> Fornecedors
		{
			get
			{
				return this._Fornecedors;
			}
			set
			{
				this._Fornecedors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Fornecedors(Fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.TipoFornecedor = this;
		}
		
		private void detach_Fornecedors(Fornecedor entity)
		{
			this.SendPropertyChanging();
			entity.TipoFornecedor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Cidades")]
	public partial class V_Cidade
	{
		
		private long _IdCidade;
		
		private string _Cidade;
		
		private string _Estado;
		
		private System.Data.Linq.Binary _DDD;
		
		private string _Pais;
		
		private string _DDI;
		
		private long _IdPais;
		
		public V_Cidade()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt NOT NULL")]
		public long IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					this._IdCidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cidade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this._Cidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDD", DbType="VarBinary(2)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DDD
		{
			get
			{
				return this._DDD;
			}
			set
			{
				if ((this._DDD != value))
				{
					this._DDD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this._Pais = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDI", DbType="VarChar(3)")]
		public string DDI
		{
			get
			{
				return this._DDI;
			}
			set
			{
				if ((this._DDI != value))
				{
					this._DDI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", DbType="BigInt NOT NULL")]
		public long IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					this._IdPais = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ContatoCliente")]
	public partial class V_ContatoCliente
	{
		
		private long _IDContato;
		
		private long _IdCliente;
		
		private string _Telefone;
		
		private System.Nullable<long> _IdCidade;
		
		private string _Endereco;
		
		private string _Numero;
		
		private string _CEP;
		
		private string _Comentarios;
		
		private string _Cidade;
		
		private string _Estado;
		
		private string _Pais;
		
		private string _DDD;
		
		private string _DDI;
		
		private string _Expr1;
		
		public V_ContatoCliente()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDContato", DbType="BigInt NOT NULL")]
		public long IDContato
		{
			get
			{
				return this._IDContato;
			}
			set
			{
				if ((this._IDContato != value))
				{
					this._IDContato = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="BigInt NOT NULL")]
		public long IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this._IdCliente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(10)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this._Telefone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt")]
		public System.Nullable<long> IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					this._IdCidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereco", DbType="VarChar(50)")]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this._Endereco = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="VarChar(10)")]
		public string Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this._Numero = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEP", DbType="VarChar(9)")]
		public string CEP
		{
			get
			{
				return this._CEP;
			}
			set
			{
				if ((this._CEP != value))
				{
					this._CEP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this._Comentarios = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cidade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this._Cidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this._Pais = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDD", DbType="VarChar(2)")]
		public string DDD
		{
			get
			{
				return this._DDD;
			}
			set
			{
				if ((this._DDD != value))
				{
					this._DDD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDI", DbType="VarChar(3)")]
		public string DDI
		{
			get
			{
				return this._DDI;
			}
			set
			{
				if ((this._DDI != value))
				{
					this._DDI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="VarChar(50)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Passageiros")]
	public partial class V_Passageiro
	{
		
		private long _IdVenda;
		
		private long _IdPassageiro;
		
		private int _IdCategoria;
		
		private string _NomePassageiro1;
		
		private string _NomePassageiro2;
		
		private string _NomePassageiro3;
		
		private string _RGPassageiro;
		
		private string _CPFPassageiro;
		
		private System.Nullable<long> _IdResp;
		
		private string _NomeResp1;
		
		private string _NomeResp2;
		
		private string _NomeResp3;
		
		private string _CPFResp;
		
		private string _RGResp;
		
		private string _emailResp;
		
		private string _emailPassageiro;
		
		public V_Passageiro()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="BigInt NOT NULL")]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					this._IdVenda = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPassageiro", DbType="BigInt NOT NULL")]
		public long IdPassageiro
		{
			get
			{
				return this._IdPassageiro;
			}
			set
			{
				if ((this._IdPassageiro != value))
				{
					this._IdPassageiro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL")]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this._IdCategoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomePassageiro1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomePassageiro1
		{
			get
			{
				return this._NomePassageiro1;
			}
			set
			{
				if ((this._NomePassageiro1 != value))
				{
					this._NomePassageiro1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomePassageiro2", DbType="VarChar(30)")]
		public string NomePassageiro2
		{
			get
			{
				return this._NomePassageiro2;
			}
			set
			{
				if ((this._NomePassageiro2 != value))
				{
					this._NomePassageiro2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomePassageiro3", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomePassageiro3
		{
			get
			{
				return this._NomePassageiro3;
			}
			set
			{
				if ((this._NomePassageiro3 != value))
				{
					this._NomePassageiro3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGPassageiro", DbType="VarChar(20)")]
		public string RGPassageiro
		{
			get
			{
				return this._RGPassageiro;
			}
			set
			{
				if ((this._RGPassageiro != value))
				{
					this._RGPassageiro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPFPassageiro", DbType="VarChar(14)")]
		public string CPFPassageiro
		{
			get
			{
				return this._CPFPassageiro;
			}
			set
			{
				if ((this._CPFPassageiro != value))
				{
					this._CPFPassageiro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdResp", DbType="BigInt")]
		public System.Nullable<long> IdResp
		{
			get
			{
				return this._IdResp;
			}
			set
			{
				if ((this._IdResp != value))
				{
					this._IdResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeResp1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeResp1
		{
			get
			{
				return this._NomeResp1;
			}
			set
			{
				if ((this._NomeResp1 != value))
				{
					this._NomeResp1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeResp2", DbType="VarChar(30)")]
		public string NomeResp2
		{
			get
			{
				return this._NomeResp2;
			}
			set
			{
				if ((this._NomeResp2 != value))
				{
					this._NomeResp2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeResp3", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeResp3
		{
			get
			{
				return this._NomeResp3;
			}
			set
			{
				if ((this._NomeResp3 != value))
				{
					this._NomeResp3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPFResp", DbType="VarChar(14)")]
		public string CPFResp
		{
			get
			{
				return this._CPFResp;
			}
			set
			{
				if ((this._CPFResp != value))
				{
					this._CPFResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGResp", DbType="VarChar(20)")]
		public string RGResp
		{
			get
			{
				return this._RGResp;
			}
			set
			{
				if ((this._RGResp != value))
				{
					this._RGResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailResp", DbType="VarChar(50)")]
		public string emailResp
		{
			get
			{
				return this._emailResp;
			}
			set
			{
				if ((this._emailResp != value))
				{
					this._emailResp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailPassageiro", DbType="VarChar(50)")]
		public string emailPassageiro
		{
			get
			{
				return this._emailPassageiro;
			}
			set
			{
				if ((this._emailPassageiro != value))
				{
					this._emailPassageiro = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Vendas")]
	public partial class V_Venda
	{
		
		private long _IdVenda;
		
		private long _IdCliente;
		
		private string _NomeCliente1;
		
		private string _NomeCliente3;
		
		private long _IdCidade;
		
		private string _Cidade;
		
		private string _Estado;
		
		private string _Pais;
		
		private long _IdProduto;
		
		private string _NomeProduto;
		
		private long _IdFornecedor;
		
		private string _NomeFornecedor;
		
		private string _Tipo;
		
		private System.Nullable<decimal> _Comissao;
		
		private string _NomeCliente2;
		
		private string _NomeUsuario;
		
		private long _IDUsuario;
		
		private int _Status;
		
		private System.Nullable<System.DateTime> _DataVenda;
		
		public V_Venda()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="BigInt NOT NULL")]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					this._IdVenda = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="BigInt NOT NULL")]
		public long IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this._IdCliente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCliente1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeCliente1
		{
			get
			{
				return this._NomeCliente1;
			}
			set
			{
				if ((this._NomeCliente1 != value))
				{
					this._NomeCliente1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCliente3", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string NomeCliente3
		{
			get
			{
				return this._NomeCliente3;
			}
			set
			{
				if ((this._NomeCliente3 != value))
				{
					this._NomeCliente3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt NOT NULL")]
		public long IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					this._IdCidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cidade", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cidade
		{
			get
			{
				return this._Cidade;
			}
			set
			{
				if ((this._Cidade != value))
				{
					this._Cidade = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pais", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pais
		{
			get
			{
				return this._Pais;
			}
			set
			{
				if ((this._Pais != value))
				{
					this._Pais = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="BigInt NOT NULL")]
		public long IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					this._IdProduto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeProduto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomeProduto
		{
			get
			{
				return this._NomeProduto;
			}
			set
			{
				if ((this._NomeProduto != value))
				{
					this._NomeProduto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFornecedor", DbType="BigInt NOT NULL")]
		public long IdFornecedor
		{
			get
			{
				return this._IdFornecedor;
			}
			set
			{
				if ((this._IdFornecedor != value))
				{
					this._IdFornecedor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeFornecedor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomeFornecedor
		{
			get
			{
				return this._NomeFornecedor;
			}
			set
			{
				if ((this._NomeFornecedor != value))
				{
					this._NomeFornecedor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this._Tipo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comissao", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> Comissao
		{
			get
			{
				return this._Comissao;
			}
			set
			{
				if ((this._Comissao != value))
				{
					this._Comissao = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeCliente2", DbType="VarChar(30)")]
		public string NomeCliente2
		{
			get
			{
				return this._NomeCliente2;
			}
			set
			{
				if ((this._NomeCliente2 != value))
				{
					this._NomeCliente2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeUsuario", DbType="VarChar(50)")]
		public string NomeUsuario
		{
			get
			{
				return this._NomeUsuario;
			}
			set
			{
				if ((this._NomeUsuario != value))
				{
					this._NomeUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="BigInt NOT NULL")]
		public long IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					this._IDUsuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataVenda", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataVenda
		{
			get
			{
				return this._DataVenda;
			}
			set
			{
				if ((this._DataVenda != value))
				{
					this._DataVenda = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoMoeda")]
	public partial class TipoMoeda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTipoMoeda;
		
		private string _Nome;
		
		private string _Simbolo;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoMoedaChanging(long value);
    partial void OnIdTipoMoedaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnSimboloChanging(string value);
    partial void OnSimboloChanged();
    #endregion
		
		public TipoMoeda()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoMoeda", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTipoMoeda
		{
			get
			{
				return this._IdTipoMoeda;
			}
			set
			{
				if ((this._IdTipoMoeda != value))
				{
					this.OnIdTipoMoedaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoMoeda = value;
					this.SendPropertyChanged("IdTipoMoeda");
					this.OnIdTipoMoedaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Simbolo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Simbolo
		{
			get
			{
				return this._Simbolo;
			}
			set
			{
				if ((this._Simbolo != value))
				{
					this.OnSimboloChanging(value);
					this.SendPropertyChanging();
					this._Simbolo = value;
					this.SendPropertyChanged("Simbolo");
					this.OnSimboloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMoeda_Venda", Storage="_Vendas", ThisKey="IdTipoMoeda", OtherKey="IdTipoMoeda")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.TipoMoeda = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.TipoMoeda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parcelas")]
	public partial class Parcela : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdParcela;
		
		private long _IdVenda;
		
		private short _Item;
		
		private System.DateTime _DtVencimento;
		
		private string _NumDoc;
		
		private decimal _Valor;
		
		private long _IdFormaPagamento;
		
		private long _IdSituacao;
		
		private EntityRef<FormaPagamento> _FormaPagamento;
		
		private EntityRef<SituacaoParcela> _SituacaoParcela;
		
		private EntityRef<Venda> _Venda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdParcelaChanging(long value);
    partial void OnIdParcelaChanged();
    partial void OnIdVendaChanging(long value);
    partial void OnIdVendaChanged();
    partial void OnItemChanging(short value);
    partial void OnItemChanged();
    partial void OnDtVencimentoChanging(System.DateTime value);
    partial void OnDtVencimentoChanged();
    partial void OnNumDocChanging(string value);
    partial void OnNumDocChanged();
    partial void OnValorChanging(decimal value);
    partial void OnValorChanged();
    partial void OnIdFormaPagamentoChanging(long value);
    partial void OnIdFormaPagamentoChanged();
    partial void OnIdSituacaoChanging(long value);
    partial void OnIdSituacaoChanged();
    #endregion
		
		public Parcela()
		{
			this._FormaPagamento = default(EntityRef<FormaPagamento>);
			this._SituacaoParcela = default(EntityRef<SituacaoParcela>);
			this._Venda = default(EntityRef<Venda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdParcela", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdParcela
		{
			get
			{
				return this._IdParcela;
			}
			set
			{
				if ((this._IdParcela != value))
				{
					this.OnIdParcelaChanging(value);
					this.SendPropertyChanging();
					this._IdParcela = value;
					this.SendPropertyChanged("IdParcela");
					this.OnIdParcelaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="BigInt NOT NULL")]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVendaChanging(value);
					this.SendPropertyChanging();
					this._IdVenda = value;
					this.SendPropertyChanged("IdVenda");
					this.OnIdVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="SmallInt NOT NULL")]
		public short Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtVencimento", DbType="DateTime NOT NULL")]
		public System.DateTime DtVencimento
		{
			get
			{
				return this._DtVencimento;
			}
			set
			{
				if ((this._DtVencimento != value))
				{
					this.OnDtVencimentoChanging(value);
					this.SendPropertyChanging();
					this._DtVencimento = value;
					this.SendPropertyChanged("DtVencimento");
					this.OnDtVencimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDoc", DbType="VarChar(50)")]
		public string NumDoc
		{
			get
			{
				return this._NumDoc;
			}
			set
			{
				if ((this._NumDoc != value))
				{
					this.OnNumDocChanging(value);
					this.SendPropertyChanging();
					this._NumDoc = value;
					this.SendPropertyChanged("NumDoc");
					this.OnNumDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor", DbType="Money NOT NULL")]
		public decimal Valor
		{
			get
			{
				return this._Valor;
			}
			set
			{
				if ((this._Valor != value))
				{
					this.OnValorChanging(value);
					this.SendPropertyChanging();
					this._Valor = value;
					this.SendPropertyChanged("Valor");
					this.OnValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFormaPagamento", DbType="BigInt NOT NULL")]
		public long IdFormaPagamento
		{
			get
			{
				return this._IdFormaPagamento;
			}
			set
			{
				if ((this._IdFormaPagamento != value))
				{
					if (this._FormaPagamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFormaPagamentoChanging(value);
					this.SendPropertyChanging();
					this._IdFormaPagamento = value;
					this.SendPropertyChanged("IdFormaPagamento");
					this.OnIdFormaPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituacao", DbType="BigInt NOT NULL")]
		public long IdSituacao
		{
			get
			{
				return this._IdSituacao;
			}
			set
			{
				if ((this._IdSituacao != value))
				{
					if (this._SituacaoParcela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSituacaoChanging(value);
					this.SendPropertyChanging();
					this._IdSituacao = value;
					this.SendPropertyChanged("IdSituacao");
					this.OnIdSituacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormaPagamento_Parcela", Storage="_FormaPagamento", ThisKey="IdFormaPagamento", OtherKey="IdFormaPagamento", IsForeignKey=true)]
		public FormaPagamento FormaPagamento
		{
			get
			{
				return this._FormaPagamento.Entity;
			}
			set
			{
				FormaPagamento previousValue = this._FormaPagamento.Entity;
				if (((previousValue != value) 
							|| (this._FormaPagamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormaPagamento.Entity = null;
						previousValue.Parcelas.Remove(this);
					}
					this._FormaPagamento.Entity = value;
					if ((value != null))
					{
						value.Parcelas.Add(this);
						this._IdFormaPagamento = value.IdFormaPagamento;
					}
					else
					{
						this._IdFormaPagamento = default(long);
					}
					this.SendPropertyChanged("FormaPagamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoParcela_Parcela", Storage="_SituacaoParcela", ThisKey="IdSituacao", OtherKey="IdSituacao", IsForeignKey=true)]
		public SituacaoParcela SituacaoParcela
		{
			get
			{
				return this._SituacaoParcela.Entity;
			}
			set
			{
				SituacaoParcela previousValue = this._SituacaoParcela.Entity;
				if (((previousValue != value) 
							|| (this._SituacaoParcela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SituacaoParcela.Entity = null;
						previousValue.Parcelas.Remove(this);
					}
					this._SituacaoParcela.Entity = value;
					if ((value != null))
					{
						value.Parcelas.Add(this);
						this._IdSituacao = value.IdSituacao;
					}
					else
					{
						this._IdSituacao = default(long);
					}
					this.SendPropertyChanged("SituacaoParcela");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Parcela", Storage="_Venda", ThisKey="IdVenda", OtherKey="IdVenda", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.Parcelas.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.Parcelas.Add(this);
						this._IdVenda = value.IdVenda;
					}
					else
					{
						this._IdVenda = default(long);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormaPagamento")]
	public partial class FormaPagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdFormaPagamento;
		
		private string _Nome;
		
		private EntitySet<Parcela> _Parcelas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFormaPagamentoChanging(long value);
    partial void OnIdFormaPagamentoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public FormaPagamento()
		{
			this._Parcelas = new EntitySet<Parcela>(new Action<Parcela>(this.attach_Parcelas), new Action<Parcela>(this.detach_Parcelas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFormaPagamento", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdFormaPagamento
		{
			get
			{
				return this._IdFormaPagamento;
			}
			set
			{
				if ((this._IdFormaPagamento != value))
				{
					this.OnIdFormaPagamentoChanging(value);
					this.SendPropertyChanging();
					this._IdFormaPagamento = value;
					this.SendPropertyChanged("IdFormaPagamento");
					this.OnIdFormaPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormaPagamento_Parcela", Storage="_Parcelas", ThisKey="IdFormaPagamento", OtherKey="IdFormaPagamento")]
		public EntitySet<Parcela> Parcelas
		{
			get
			{
				return this._Parcelas;
			}
			set
			{
				this._Parcelas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.FormaPagamento = this;
		}
		
		private void detach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.FormaPagamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SituacaoParcela")]
	public partial class SituacaoParcela : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdSituacao;
		
		private string _Nome;
		
		private EntitySet<Parcela> _Parcelas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSituacaoChanging(long value);
    partial void OnIdSituacaoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public SituacaoParcela()
		{
			this._Parcelas = new EntitySet<Parcela>(new Action<Parcela>(this.attach_Parcelas), new Action<Parcela>(this.detach_Parcelas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituacao", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdSituacao
		{
			get
			{
				return this._IdSituacao;
			}
			set
			{
				if ((this._IdSituacao != value))
				{
					this.OnIdSituacaoChanging(value);
					this.SendPropertyChanging();
					this._IdSituacao = value;
					this.SendPropertyChanged("IdSituacao");
					this.OnIdSituacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoParcela_Parcela", Storage="_Parcelas", ThisKey="IdSituacao", OtherKey="IdSituacao")]
		public EntitySet<Parcela> Parcelas
		{
			get
			{
				return this._Parcelas;
			}
			set
			{
				this._Parcelas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoParcela = this;
		}
		
		private void detach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoParcela = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContatoCliente")]
	public partial class ContatoCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdContatoCliente;
		
		private long _IdCliente;
		
		private string _Telefone;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContatoClienteChanging(long value);
    partial void OnIdContatoClienteChanged();
    partial void OnIdClienteChanging(long value);
    partial void OnIdClienteChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    #endregion
		
		public ContatoCliente()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContatoCliente", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdContatoCliente
		{
			get
			{
				return this._IdContatoCliente;
			}
			set
			{
				if ((this._IdContatoCliente != value))
				{
					this.OnIdContatoClienteChanging(value);
					this.SendPropertyChanging();
					this._IdContatoCliente = value;
					this.SendPropertyChanged("IdContatoCliente");
					this.OnIdContatoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="BigInt NOT NULL")]
		public long IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ContatoCliente", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IDCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.ContatoClientes.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.ContatoClientes.Add(this);
						this._IdCliente = value.IDCliente;
					}
					else
					{
						this._IdCliente = default(long);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SituacaoVenda")]
	public partial class SituacaoVenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdSituacaoVenda;
		
		private string _Nome;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSituacaoVendaChanging(long value);
    partial void OnIdSituacaoVendaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public SituacaoVenda()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituacaoVenda", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdSituacaoVenda
		{
			get
			{
				return this._IdSituacaoVenda;
			}
			set
			{
				if ((this._IdSituacaoVenda != value))
				{
					this.OnIdSituacaoVendaChanging(value);
					this.SendPropertyChanging();
					this._IdSituacaoVenda = value;
					this.SendPropertyChanged("IdSituacaoVenda");
					this.OnIdSituacaoVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoVenda_Venda", Storage="_Vendas", ThisKey="IdSituacaoVenda", OtherKey="IdSituacaoVenda")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoVenda = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.SituacaoVenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MotivoCancelamento")]
	public partial class MotivoCancelamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdMotivoCancelamento;
		
		private string _Motivo;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMotivoCancelamentoChanging(long value);
    partial void OnIdMotivoCancelamentoChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public MotivoCancelamento()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMotivoCancelamento", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdMotivoCancelamento
		{
			get
			{
				return this._IdMotivoCancelamento;
			}
			set
			{
				if ((this._IdMotivoCancelamento != value))
				{
					this.OnIdMotivoCancelamentoChanging(value);
					this.SendPropertyChanging();
					this._IdMotivoCancelamento = value;
					this.SendPropertyChanged("IdMotivoCancelamento");
					this.OnIdMotivoCancelamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo", DbType="VarChar(50)")]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MotivoCancelamento_Venda", Storage="_Vendas", ThisKey="IdMotivoCancelamento", OtherKey="IdMotivoCancelamento")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.MotivoCancelamento = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.MotivoCancelamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoReembolso")]
	public partial class TipoReembolso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdTipoReembolso;
		
		private string _Nome;
		
		private EntitySet<Venda> _Vendas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTipoReembolsoChanging(long value);
    partial void OnIdTipoReembolsoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public TipoReembolso()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoReembolso", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdTipoReembolso
		{
			get
			{
				return this._IdTipoReembolso;
			}
			set
			{
				if ((this._IdTipoReembolso != value))
				{
					this.OnIdTipoReembolsoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoReembolso = value;
					this.SendPropertyChanged("IdTipoReembolso");
					this.OnIdTipoReembolsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoReembolso_Venda", Storage="_Vendas", ThisKey="IdTipoReembolso", OtherKey="IdTipoReembolso")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.TipoReembolso = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.TipoReembolso = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDUsuario;
		
		private string _Nome;
		
		private char _Tipo;
		
		private string _Senha;
		
		private string _Apelido;
		
		private char _Status;
		
		private EntitySet<Venda> _Vendas;
		
		private EntitySet<Venda> _Vendas1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUsuarioChanging(long value);
    partial void OnIDUsuarioChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTipoChanging(char value);
    partial void OnTipoChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    partial void OnApelidoChanging(string value);
    partial void OnApelidoChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    #endregion
		
		public Usuario()
		{
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			this._Vendas1 = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas1), new Action<Venda>(this.detach_Vendas1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="Char(1) NOT NULL")]
		public char Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Senha", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apelido", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Apelido
		{
			get
			{
				return this._Apelido;
			}
			set
			{
				if ((this._Apelido != value))
				{
					this.OnApelidoChanging(value);
					this.SendPropertyChanging();
					this._Apelido = value;
					this.SendPropertyChanged("Apelido");
					this.OnApelidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venda", Storage="_Vendas", ThisKey="IDUsuario", OtherKey="IdUsuario")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venda1", Storage="_Vendas1", ThisKey="IDUsuario", OtherKey="IdComissionado")]
		public EntitySet<Venda> Vendas1
		{
			get
			{
				return this._Vendas1;
			}
			set
			{
				this._Vendas1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Vendas1(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = this;
		}
		
		private void detach_Vendas1(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Usuario1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vendas")]
	public partial class Venda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdVenda;
		
		private long _IdCliente;
		
		private long _IdCidade;
		
		private long _IdProduto;
		
		private long _IdOperadora;
		
		private System.Nullable<decimal> _PrecoAdult;
		
		private System.Nullable<decimal> _PrecoCHD;
		
		private System.Nullable<decimal> _PrecoINF;
		
		private long _IdTipoPagamento;
		
		private System.Nullable<long> _IdSituacaoVenda;
		
		private System.Nullable<System.DateTime> _DataVenda;
		
		private long _IdUsuario;
		
		private System.Nullable<long> _IdHotel;
		
		private System.Nullable<long> _IdMotivoViagem;
		
		private System.Nullable<decimal> _Desconto;
		
		private System.Nullable<long> _IdTipoMoeda;
		
		private System.Nullable<decimal> _CambioDoDia;
		
		private string _Observacoes;
		
		private System.Nullable<long> _IdMotivoCancelamento;
		
		private System.Nullable<long> _IdTipoReembolso;
		
		private System.Nullable<long> _IdComissionado;
		
		private System.Nullable<decimal> _TaxaAdult;
		
		private System.Nullable<decimal> _TaxaCHD;
		
		private System.Nullable<decimal> _TaxaInf;
		
		private System.Nullable<System.DateTime> _DataEmbarque;
		
		private System.Nullable<System.DateTime> _DataRetorno;
		
		private System.Nullable<decimal> _TaxaAdm;
		
		private string _Localizador;
		
		private EntitySet<Passageiro> _Passageiros;
		
		private EntitySet<Parcela> _Parcelas;
		
		private EntitySet<HistoricoVenda> _HistoricoVendas;
		
		private EntityRef<Cidade> _Cidade;
		
		private EntityRef<Fornecedor> _Fornecedor;
		
		private EntityRef<Fornecedor> _Fornecedor1;
		
		private EntityRef<MotivoCancelamento> _MotivoCancelamento;
		
		private EntityRef<Produto> _Produto;
		
		private EntityRef<SituacaoVenda> _SituacaoVenda;
		
		private EntityRef<TipoMoeda> _TipoMoeda;
		
		private EntityRef<TipoReembolso> _TipoReembolso;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Usuario> _Usuario1;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdVendaChanging(long value);
    partial void OnIdVendaChanged();
    partial void OnIdClienteChanging(long value);
    partial void OnIdClienteChanged();
    partial void OnIdCidadeChanging(long value);
    partial void OnIdCidadeChanged();
    partial void OnIdProdutoChanging(long value);
    partial void OnIdProdutoChanged();
    partial void OnIdOperadoraChanging(long value);
    partial void OnIdOperadoraChanged();
    partial void OnPrecoAdultChanging(System.Nullable<decimal> value);
    partial void OnPrecoAdultChanged();
    partial void OnPrecoCHDChanging(System.Nullable<decimal> value);
    partial void OnPrecoCHDChanged();
    partial void OnPrecoINFChanging(System.Nullable<decimal> value);
    partial void OnPrecoINFChanged();
    partial void OnIdTipoPagamentoChanging(long value);
    partial void OnIdTipoPagamentoChanged();
    partial void OnIdSituacaoVendaChanging(System.Nullable<long> value);
    partial void OnIdSituacaoVendaChanged();
    partial void OnDataVendaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataVendaChanged();
    partial void OnIdUsuarioChanging(long value);
    partial void OnIdUsuarioChanged();
    partial void OnIdHotelChanging(System.Nullable<long> value);
    partial void OnIdHotelChanged();
    partial void OnIdMotivoViagemChanging(System.Nullable<long> value);
    partial void OnIdMotivoViagemChanged();
    partial void OnDescontoChanging(System.Nullable<decimal> value);
    partial void OnDescontoChanged();
    partial void OnIdTipoMoedaChanging(System.Nullable<long> value);
    partial void OnIdTipoMoedaChanged();
    partial void OnCambioDoDiaChanging(System.Nullable<decimal> value);
    partial void OnCambioDoDiaChanged();
    partial void OnObservacoesChanging(string value);
    partial void OnObservacoesChanged();
    partial void OnIdMotivoCancelamentoChanging(System.Nullable<long> value);
    partial void OnIdMotivoCancelamentoChanged();
    partial void OnIdTipoReembolsoChanging(System.Nullable<long> value);
    partial void OnIdTipoReembolsoChanged();
    partial void OnIdComissionadoChanging(System.Nullable<long> value);
    partial void OnIdComissionadoChanged();
    partial void OnTaxaAdultChanging(System.Nullable<decimal> value);
    partial void OnTaxaAdultChanged();
    partial void OnTaxaCHDChanging(System.Nullable<decimal> value);
    partial void OnTaxaCHDChanged();
    partial void OnTaxaInfChanging(System.Nullable<decimal> value);
    partial void OnTaxaInfChanged();
    partial void OnDataEmbarqueChanging(System.Nullable<System.DateTime> value);
    partial void OnDataEmbarqueChanged();
    partial void OnDataRetornoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataRetornoChanged();
    partial void OnTaxaAdmChanging(System.Nullable<decimal> value);
    partial void OnTaxaAdmChanged();
    partial void OnLocalizadorChanging(string value);
    partial void OnLocalizadorChanged();
    #endregion
		
		public Venda()
		{
			this._Passageiros = new EntitySet<Passageiro>(new Action<Passageiro>(this.attach_Passageiros), new Action<Passageiro>(this.detach_Passageiros));
			this._Parcelas = new EntitySet<Parcela>(new Action<Parcela>(this.attach_Parcelas), new Action<Parcela>(this.detach_Parcelas));
			this._HistoricoVendas = new EntitySet<HistoricoVenda>(new Action<HistoricoVenda>(this.attach_HistoricoVendas), new Action<HistoricoVenda>(this.detach_HistoricoVendas));
			this._Cidade = default(EntityRef<Cidade>);
			this._Fornecedor = default(EntityRef<Fornecedor>);
			this._Fornecedor1 = default(EntityRef<Fornecedor>);
			this._MotivoCancelamento = default(EntityRef<MotivoCancelamento>);
			this._Produto = default(EntityRef<Produto>);
			this._SituacaoVenda = default(EntityRef<SituacaoVenda>);
			this._TipoMoeda = default(EntityRef<TipoMoeda>);
			this._TipoReembolso = default(EntityRef<TipoReembolso>);
			this._Usuario = default(EntityRef<Usuario>);
			this._Usuario1 = default(EntityRef<Usuario>);
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					this.OnIdVendaChanging(value);
					this.SendPropertyChanging();
					this._IdVenda = value;
					this.SendPropertyChanged("IdVenda");
					this.OnIdVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="BigInt NOT NULL")]
		public long IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt NOT NULL")]
		public long IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduto", DbType="BigInt NOT NULL")]
		public long IdProduto
		{
			get
			{
				return this._IdProduto;
			}
			set
			{
				if ((this._IdProduto != value))
				{
					if (this._Produto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProdutoChanging(value);
					this.SendPropertyChanging();
					this._IdProduto = value;
					this.SendPropertyChanged("IdProduto");
					this.OnIdProdutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdOperadora", DbType="BigInt NOT NULL")]
		public long IdOperadora
		{
			get
			{
				return this._IdOperadora;
			}
			set
			{
				if ((this._IdOperadora != value))
				{
					if (this._Fornecedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdOperadoraChanging(value);
					this.SendPropertyChanging();
					this._IdOperadora = value;
					this.SendPropertyChanged("IdOperadora");
					this.OnIdOperadoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoAdult", DbType="Money")]
		public System.Nullable<decimal> PrecoAdult
		{
			get
			{
				return this._PrecoAdult;
			}
			set
			{
				if ((this._PrecoAdult != value))
				{
					this.OnPrecoAdultChanging(value);
					this.SendPropertyChanging();
					this._PrecoAdult = value;
					this.SendPropertyChanged("PrecoAdult");
					this.OnPrecoAdultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoCHD", DbType="Money")]
		public System.Nullable<decimal> PrecoCHD
		{
			get
			{
				return this._PrecoCHD;
			}
			set
			{
				if ((this._PrecoCHD != value))
				{
					this.OnPrecoCHDChanging(value);
					this.SendPropertyChanging();
					this._PrecoCHD = value;
					this.SendPropertyChanged("PrecoCHD");
					this.OnPrecoCHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecoINF", DbType="Money")]
		public System.Nullable<decimal> PrecoINF
		{
			get
			{
				return this._PrecoINF;
			}
			set
			{
				if ((this._PrecoINF != value))
				{
					this.OnPrecoINFChanging(value);
					this.SendPropertyChanging();
					this._PrecoINF = value;
					this.SendPropertyChanged("PrecoINF");
					this.OnPrecoINFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoPagamento", DbType="BigInt NOT NULL")]
		public long IdTipoPagamento
		{
			get
			{
				return this._IdTipoPagamento;
			}
			set
			{
				if ((this._IdTipoPagamento != value))
				{
					this.OnIdTipoPagamentoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoPagamento = value;
					this.SendPropertyChanged("IdTipoPagamento");
					this.OnIdTipoPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSituacaoVenda", DbType="BigInt")]
		public System.Nullable<long> IdSituacaoVenda
		{
			get
			{
				return this._IdSituacaoVenda;
			}
			set
			{
				if ((this._IdSituacaoVenda != value))
				{
					if (this._SituacaoVenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSituacaoVendaChanging(value);
					this.SendPropertyChanging();
					this._IdSituacaoVenda = value;
					this.SendPropertyChanged("IdSituacaoVenda");
					this.OnIdSituacaoVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataVenda", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataVenda
		{
			get
			{
				return this._DataVenda;
			}
			set
			{
				if ((this._DataVenda != value))
				{
					this.OnDataVendaChanging(value);
					this.SendPropertyChanging();
					this._DataVenda = value;
					this.SendPropertyChanged("DataVenda");
					this.OnDataVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUsuario", DbType="BigInt NOT NULL")]
		public long IdUsuario
		{
			get
			{
				return this._IdUsuario;
			}
			set
			{
				if ((this._IdUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IdUsuario = value;
					this.SendPropertyChanged("IdUsuario");
					this.OnIdUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHotel", DbType="BigInt")]
		public System.Nullable<long> IdHotel
		{
			get
			{
				return this._IdHotel;
			}
			set
			{
				if ((this._IdHotel != value))
				{
					if (this._Fornecedor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHotelChanging(value);
					this.SendPropertyChanging();
					this._IdHotel = value;
					this.SendPropertyChanged("IdHotel");
					this.OnIdHotelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMotivoViagem", DbType="BigInt")]
		public System.Nullable<long> IdMotivoViagem
		{
			get
			{
				return this._IdMotivoViagem;
			}
			set
			{
				if ((this._IdMotivoViagem != value))
				{
					this.OnIdMotivoViagemChanging(value);
					this.SendPropertyChanging();
					this._IdMotivoViagem = value;
					this.SendPropertyChanged("IdMotivoViagem");
					this.OnIdMotivoViagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desconto", DbType="Money")]
		public System.Nullable<decimal> Desconto
		{
			get
			{
				return this._Desconto;
			}
			set
			{
				if ((this._Desconto != value))
				{
					this.OnDescontoChanging(value);
					this.SendPropertyChanging();
					this._Desconto = value;
					this.SendPropertyChanged("Desconto");
					this.OnDescontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoMoeda", DbType="BigInt")]
		public System.Nullable<long> IdTipoMoeda
		{
			get
			{
				return this._IdTipoMoeda;
			}
			set
			{
				if ((this._IdTipoMoeda != value))
				{
					if (this._TipoMoeda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoMoedaChanging(value);
					this.SendPropertyChanging();
					this._IdTipoMoeda = value;
					this.SendPropertyChanged("IdTipoMoeda");
					this.OnIdTipoMoedaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CambioDoDia", DbType="Money")]
		public System.Nullable<decimal> CambioDoDia
		{
			get
			{
				return this._CambioDoDia;
			}
			set
			{
				if ((this._CambioDoDia != value))
				{
					this.OnCambioDoDiaChanging(value);
					this.SendPropertyChanging();
					this._CambioDoDia = value;
					this.SendPropertyChanged("CambioDoDia");
					this.OnCambioDoDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Observacoes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Observacoes
		{
			get
			{
				return this._Observacoes;
			}
			set
			{
				if ((this._Observacoes != value))
				{
					this.OnObservacoesChanging(value);
					this.SendPropertyChanging();
					this._Observacoes = value;
					this.SendPropertyChanged("Observacoes");
					this.OnObservacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMotivoCancelamento", DbType="BigInt")]
		public System.Nullable<long> IdMotivoCancelamento
		{
			get
			{
				return this._IdMotivoCancelamento;
			}
			set
			{
				if ((this._IdMotivoCancelamento != value))
				{
					if (this._MotivoCancelamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMotivoCancelamentoChanging(value);
					this.SendPropertyChanging();
					this._IdMotivoCancelamento = value;
					this.SendPropertyChanged("IdMotivoCancelamento");
					this.OnIdMotivoCancelamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTipoReembolso", DbType="BigInt")]
		public System.Nullable<long> IdTipoReembolso
		{
			get
			{
				return this._IdTipoReembolso;
			}
			set
			{
				if ((this._IdTipoReembolso != value))
				{
					if (this._TipoReembolso.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTipoReembolsoChanging(value);
					this.SendPropertyChanging();
					this._IdTipoReembolso = value;
					this.SendPropertyChanged("IdTipoReembolso");
					this.OnIdTipoReembolsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdComissionado", DbType="BigInt")]
		public System.Nullable<long> IdComissionado
		{
			get
			{
				return this._IdComissionado;
			}
			set
			{
				if ((this._IdComissionado != value))
				{
					if (this._Usuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdComissionadoChanging(value);
					this.SendPropertyChanging();
					this._IdComissionado = value;
					this.SendPropertyChanged("IdComissionado");
					this.OnIdComissionadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxaAdult", DbType="Money")]
		public System.Nullable<decimal> TaxaAdult
		{
			get
			{
				return this._TaxaAdult;
			}
			set
			{
				if ((this._TaxaAdult != value))
				{
					this.OnTaxaAdultChanging(value);
					this.SendPropertyChanging();
					this._TaxaAdult = value;
					this.SendPropertyChanged("TaxaAdult");
					this.OnTaxaAdultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxaCHD", DbType="Money")]
		public System.Nullable<decimal> TaxaCHD
		{
			get
			{
				return this._TaxaCHD;
			}
			set
			{
				if ((this._TaxaCHD != value))
				{
					this.OnTaxaCHDChanging(value);
					this.SendPropertyChanging();
					this._TaxaCHD = value;
					this.SendPropertyChanged("TaxaCHD");
					this.OnTaxaCHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxaInf", DbType="Money")]
		public System.Nullable<decimal> TaxaInf
		{
			get
			{
				return this._TaxaInf;
			}
			set
			{
				if ((this._TaxaInf != value))
				{
					this.OnTaxaInfChanging(value);
					this.SendPropertyChanging();
					this._TaxaInf = value;
					this.SendPropertyChanged("TaxaInf");
					this.OnTaxaInfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEmbarque", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataEmbarque
		{
			get
			{
				return this._DataEmbarque;
			}
			set
			{
				if ((this._DataEmbarque != value))
				{
					this.OnDataEmbarqueChanging(value);
					this.SendPropertyChanging();
					this._DataEmbarque = value;
					this.SendPropertyChanged("DataEmbarque");
					this.OnDataEmbarqueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRetorno", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataRetorno
		{
			get
			{
				return this._DataRetorno;
			}
			set
			{
				if ((this._DataRetorno != value))
				{
					this.OnDataRetornoChanging(value);
					this.SendPropertyChanging();
					this._DataRetorno = value;
					this.SendPropertyChanged("DataRetorno");
					this.OnDataRetornoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxaAdm", DbType="Decimal(5,3)")]
		public System.Nullable<decimal> TaxaAdm
		{
			get
			{
				return this._TaxaAdm;
			}
			set
			{
				if ((this._TaxaAdm != value))
				{
					this.OnTaxaAdmChanging(value);
					this.SendPropertyChanging();
					this._TaxaAdm = value;
					this.SendPropertyChanged("TaxaAdm");
					this.OnTaxaAdmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Localizador", DbType="VarChar(50)")]
		public string Localizador
		{
			get
			{
				return this._Localizador;
			}
			set
			{
				if ((this._Localizador != value))
				{
					this.OnLocalizadorChanging(value);
					this.SendPropertyChanging();
					this._Localizador = value;
					this.SendPropertyChanged("Localizador");
					this.OnLocalizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Passageiro", Storage="_Passageiros", ThisKey="IdVenda", OtherKey="IdVenda")]
		public EntitySet<Passageiro> Passageiros
		{
			get
			{
				return this._Passageiros;
			}
			set
			{
				this._Passageiros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_Parcela", Storage="_Parcelas", ThisKey="IdVenda", OtherKey="IdVenda")]
		public EntitySet<Parcela> Parcelas
		{
			get
			{
				return this._Parcelas;
			}
			set
			{
				this._Parcelas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_HistoricoVenda", Storage="_HistoricoVendas", ThisKey="IdVenda", OtherKey="IdVenda")]
		public EntitySet<HistoricoVenda> HistoricoVendas
		{
			get
			{
				return this._HistoricoVendas;
			}
			set
			{
				this._HistoricoVendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Venda", Storage="_Cidade", ThisKey="IdCidade", OtherKey="IdCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdCidade = value.IdCidade;
					}
					else
					{
						this._IdCidade = default(long);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornecedor_Venda", Storage="_Fornecedor", ThisKey="IdOperadora", OtherKey="IdFornecedor", IsForeignKey=true)]
		public Fornecedor Fornecedor
		{
			get
			{
				return this._Fornecedor.Entity;
			}
			set
			{
				Fornecedor previousValue = this._Fornecedor.Entity;
				if (((previousValue != value) 
							|| (this._Fornecedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornecedor.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Fornecedor.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdOperadora = value.IdFornecedor;
					}
					else
					{
						this._IdOperadora = default(long);
					}
					this.SendPropertyChanged("Fornecedor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornecedor_Venda1", Storage="_Fornecedor1", ThisKey="IdHotel", OtherKey="IdFornecedor", IsForeignKey=true)]
		public Fornecedor Fornecedor1
		{
			get
			{
				return this._Fornecedor1.Entity;
			}
			set
			{
				Fornecedor previousValue = this._Fornecedor1.Entity;
				if (((previousValue != value) 
							|| (this._Fornecedor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornecedor1.Entity = null;
						previousValue.Vendas1.Remove(this);
					}
					this._Fornecedor1.Entity = value;
					if ((value != null))
					{
						value.Vendas1.Add(this);
						this._IdHotel = value.IdFornecedor;
					}
					else
					{
						this._IdHotel = default(Nullable<long>);
					}
					this.SendPropertyChanged("Fornecedor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MotivoCancelamento_Venda", Storage="_MotivoCancelamento", ThisKey="IdMotivoCancelamento", OtherKey="IdMotivoCancelamento", IsForeignKey=true)]
		public MotivoCancelamento MotivoCancelamento
		{
			get
			{
				return this._MotivoCancelamento.Entity;
			}
			set
			{
				MotivoCancelamento previousValue = this._MotivoCancelamento.Entity;
				if (((previousValue != value) 
							|| (this._MotivoCancelamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MotivoCancelamento.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._MotivoCancelamento.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdMotivoCancelamento = value.IdMotivoCancelamento;
					}
					else
					{
						this._IdMotivoCancelamento = default(Nullable<long>);
					}
					this.SendPropertyChanged("MotivoCancelamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Produto_Venda", Storage="_Produto", ThisKey="IdProduto", OtherKey="IdProduto", IsForeignKey=true)]
		public Produto Produto
		{
			get
			{
				return this._Produto.Entity;
			}
			set
			{
				Produto previousValue = this._Produto.Entity;
				if (((previousValue != value) 
							|| (this._Produto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Produto.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Produto.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdProduto = value.IdProduto;
					}
					else
					{
						this._IdProduto = default(long);
					}
					this.SendPropertyChanged("Produto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SituacaoVenda_Venda", Storage="_SituacaoVenda", ThisKey="IdSituacaoVenda", OtherKey="IdSituacaoVenda", IsForeignKey=true)]
		public SituacaoVenda SituacaoVenda
		{
			get
			{
				return this._SituacaoVenda.Entity;
			}
			set
			{
				SituacaoVenda previousValue = this._SituacaoVenda.Entity;
				if (((previousValue != value) 
							|| (this._SituacaoVenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SituacaoVenda.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._SituacaoVenda.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdSituacaoVenda = value.IdSituacaoVenda;
					}
					else
					{
						this._IdSituacaoVenda = default(Nullable<long>);
					}
					this.SendPropertyChanged("SituacaoVenda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoMoeda_Venda", Storage="_TipoMoeda", ThisKey="IdTipoMoeda", OtherKey="IdTipoMoeda", IsForeignKey=true)]
		public TipoMoeda TipoMoeda
		{
			get
			{
				return this._TipoMoeda.Entity;
			}
			set
			{
				TipoMoeda previousValue = this._TipoMoeda.Entity;
				if (((previousValue != value) 
							|| (this._TipoMoeda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoMoeda.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._TipoMoeda.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdTipoMoeda = value.IdTipoMoeda;
					}
					else
					{
						this._IdTipoMoeda = default(Nullable<long>);
					}
					this.SendPropertyChanged("TipoMoeda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoReembolso_Venda", Storage="_TipoReembolso", ThisKey="IdTipoReembolso", OtherKey="IdTipoReembolso", IsForeignKey=true)]
		public TipoReembolso TipoReembolso
		{
			get
			{
				return this._TipoReembolso.Entity;
			}
			set
			{
				TipoReembolso previousValue = this._TipoReembolso.Entity;
				if (((previousValue != value) 
							|| (this._TipoReembolso.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoReembolso.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._TipoReembolso.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdTipoReembolso = value.IdTipoReembolso;
					}
					else
					{
						this._IdTipoReembolso = default(Nullable<long>);
					}
					this.SendPropertyChanged("TipoReembolso");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venda", Storage="_Usuario", ThisKey="IdUsuario", OtherKey="IDUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdUsuario = value.IDUsuario;
					}
					else
					{
						this._IdUsuario = default(long);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Venda1", Storage="_Usuario1", ThisKey="IdComissionado", OtherKey="IDUsuario", IsForeignKey=true)]
		public Usuario Usuario1
		{
			get
			{
				return this._Usuario1.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario1.Entity;
				if (((previousValue != value) 
							|| (this._Usuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario1.Entity = null;
						previousValue.Vendas1.Remove(this);
					}
					this._Usuario1.Entity = value;
					if ((value != null))
					{
						value.Vendas1.Add(this);
						this._IdComissionado = value.IDUsuario;
					}
					else
					{
						this._IdComissionado = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usuario1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Cliente", ThisKey="IdCliente", OtherKey="IDCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.Vendas.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.Vendas.Add(this);
						this._IdCliente = value.IDCliente;
					}
					else
					{
						this._IdCliente = default(long);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Passageiros(Passageiro entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_Passageiros(Passageiro entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
		
		private void attach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_Parcelas(Parcela entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
		
		private void attach_HistoricoVendas(HistoricoVenda entity)
		{
			this.SendPropertyChanging();
			entity.Venda = this;
		}
		
		private void detach_HistoricoVendas(HistoricoVenda entity)
		{
			this.SendPropertyChanging();
			entity.Venda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDCliente;
		
		private string _Nome1;
		
		private string _Nome2;
		
		private string _Nome3;
		
		private string _RG;
		
		private string _CPF;
		
		private System.Nullable<long> _IdResp;
		
		private string _email;
		
		private string _Telefone;
		
		private string _Endereco;
		
		private string _CEP;
		
		private System.Nullable<long> _IdCidade;
		
		private string _Comentarios;
		
		private System.Nullable<System.DateTime> _DataNascimento;
		
		private int _TipoDocumento;
		
		private string _NomeMae;
		
		private System.Nullable<decimal> _RendaMensal;
		
		private string _ContaReembolso;
		
		private EntitySet<Passageiro> _Passageiros;
		
		private EntitySet<ContatoCliente> _ContatoClientes;
		
		private EntitySet<Venda> _Vendas;
		
		private EntitySet<Cliente> _Clientes;
		
		private EntityRef<Cidade> _Cidade;
		
		private EntityRef<Cliente> _Cliente1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClienteChanging(long value);
    partial void OnIDClienteChanged();
    partial void OnNome1Changing(string value);
    partial void OnNome1Changed();
    partial void OnNome2Changing(string value);
    partial void OnNome2Changed();
    partial void OnNome3Changing(string value);
    partial void OnNome3Changed();
    partial void OnRGChanging(string value);
    partial void OnRGChanged();
    partial void OnCPFChanging(string value);
    partial void OnCPFChanged();
    partial void OnIdRespChanging(System.Nullable<long> value);
    partial void OnIdRespChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnEnderecoChanging(string value);
    partial void OnEnderecoChanged();
    partial void OnCEPChanging(string value);
    partial void OnCEPChanged();
    partial void OnIdCidadeChanging(System.Nullable<long> value);
    partial void OnIdCidadeChanged();
    partial void OnComentariosChanging(string value);
    partial void OnComentariosChanged();
    partial void OnDataNascimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascimentoChanged();
    partial void OnTipoDocumentoChanging(int value);
    partial void OnTipoDocumentoChanged();
    partial void OnNomeMaeChanging(string value);
    partial void OnNomeMaeChanged();
    partial void OnRendaMensalChanging(System.Nullable<decimal> value);
    partial void OnRendaMensalChanged();
    partial void OnContaReembolsoChanging(string value);
    partial void OnContaReembolsoChanged();
    #endregion
		
		public Cliente()
		{
			this._Passageiros = new EntitySet<Passageiro>(new Action<Passageiro>(this.attach_Passageiros), new Action<Passageiro>(this.detach_Passageiros));
			this._ContatoClientes = new EntitySet<ContatoCliente>(new Action<ContatoCliente>(this.attach_ContatoClientes), new Action<ContatoCliente>(this.detach_ContatoClientes));
			this._Vendas = new EntitySet<Venda>(new Action<Venda>(this.attach_Vendas), new Action<Venda>(this.detach_Vendas));
			this._Clientes = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Clientes), new Action<Cliente>(this.detach_Clientes));
			this._Cidade = default(EntityRef<Cidade>);
			this._Cliente1 = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCliente", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDCliente
		{
			get
			{
				return this._IDCliente;
			}
			set
			{
				if ((this._IDCliente != value))
				{
					this.OnIDClienteChanging(value);
					this.SendPropertyChanging();
					this._IDCliente = value;
					this.SendPropertyChanged("IDCliente");
					this.OnIDClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome1", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome1
		{
			get
			{
				return this._Nome1;
			}
			set
			{
				if ((this._Nome1 != value))
				{
					this.OnNome1Changing(value);
					this.SendPropertyChanging();
					this._Nome1 = value;
					this.SendPropertyChanged("Nome1");
					this.OnNome1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome2", DbType="VarChar(30)")]
		public string Nome2
		{
			get
			{
				return this._Nome2;
			}
			set
			{
				if ((this._Nome2 != value))
				{
					this.OnNome2Changing(value);
					this.SendPropertyChanging();
					this._Nome2 = value;
					this.SendPropertyChanged("Nome2");
					this.OnNome2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome3", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome3
		{
			get
			{
				return this._Nome3;
			}
			set
			{
				if ((this._Nome3 != value))
				{
					this.OnNome3Changing(value);
					this.SendPropertyChanging();
					this._Nome3 = value;
					this.SendPropertyChanged("Nome3");
					this.OnNome3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RG", DbType="VarChar(20)")]
		public string RG
		{
			get
			{
				return this._RG;
			}
			set
			{
				if ((this._RG != value))
				{
					this.OnRGChanging(value);
					this.SendPropertyChanging();
					this._RG = value;
					this.SendPropertyChanged("RG");
					this.OnRGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPF", DbType="VarChar(20)")]
		public string CPF
		{
			get
			{
				return this._CPF;
			}
			set
			{
				if ((this._CPF != value))
				{
					this.OnCPFChanging(value);
					this.SendPropertyChanging();
					this._CPF = value;
					this.SendPropertyChanged("CPF");
					this.OnCPFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdResp", DbType="BigInt")]
		public System.Nullable<long> IdResp
		{
			get
			{
				return this._IdResp;
			}
			set
			{
				if ((this._IdResp != value))
				{
					if (this._Cliente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRespChanging(value);
					this.SendPropertyChanging();
					this._IdResp = value;
					this.SendPropertyChanged("IdResp");
					this.OnIdRespChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(14)")]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endereco", DbType="VarChar(50)")]
		public string Endereco
		{
			get
			{
				return this._Endereco;
			}
			set
			{
				if ((this._Endereco != value))
				{
					this.OnEnderecoChanging(value);
					this.SendPropertyChanging();
					this._Endereco = value;
					this.SendPropertyChanged("Endereco");
					this.OnEnderecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CEP", DbType="VarChar(10)")]
		public string CEP
		{
			get
			{
				return this._CEP;
			}
			set
			{
				if ((this._CEP != value))
				{
					this.OnCEPChanging(value);
					this.SendPropertyChanging();
					this._CEP = value;
					this.SendPropertyChanged("CEP");
					this.OnCEPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCidade", DbType="BigInt")]
		public System.Nullable<long> IdCidade
		{
			get
			{
				return this._IdCidade;
			}
			set
			{
				if ((this._IdCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCidadeChanging(value);
					this.SendPropertyChanging();
					this._IdCidade = value;
					this.SendPropertyChanged("IdCidade");
					this.OnIdCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentarios", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comentarios
		{
			get
			{
				return this._Comentarios;
			}
			set
			{
				if ((this._Comentarios != value))
				{
					this.OnComentariosChanging(value);
					this.SendPropertyChanging();
					this._Comentarios = value;
					this.SendPropertyChanged("Comentarios");
					this.OnComentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascimento", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DataNascimento
		{
			get
			{
				return this._DataNascimento;
			}
			set
			{
				if ((this._DataNascimento != value))
				{
					this.OnDataNascimentoChanging(value);
					this.SendPropertyChanging();
					this._DataNascimento = value;
					this.SendPropertyChanged("DataNascimento");
					this.OnDataNascimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoDocumento", DbType="Int NOT NULL")]
		public int TipoDocumento
		{
			get
			{
				return this._TipoDocumento;
			}
			set
			{
				if ((this._TipoDocumento != value))
				{
					this.OnTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._TipoDocumento = value;
					this.SendPropertyChanged("TipoDocumento");
					this.OnTipoDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeMae", DbType="VarChar(50)")]
		public string NomeMae
		{
			get
			{
				return this._NomeMae;
			}
			set
			{
				if ((this._NomeMae != value))
				{
					this.OnNomeMaeChanging(value);
					this.SendPropertyChanging();
					this._NomeMae = value;
					this.SendPropertyChanged("NomeMae");
					this.OnNomeMaeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RendaMensal", DbType="Money")]
		public System.Nullable<decimal> RendaMensal
		{
			get
			{
				return this._RendaMensal;
			}
			set
			{
				if ((this._RendaMensal != value))
				{
					this.OnRendaMensalChanging(value);
					this.SendPropertyChanging();
					this._RendaMensal = value;
					this.SendPropertyChanged("RendaMensal");
					this.OnRendaMensalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContaReembolso", DbType="VarChar(50)")]
		public string ContaReembolso
		{
			get
			{
				return this._ContaReembolso;
			}
			set
			{
				if ((this._ContaReembolso != value))
				{
					this.OnContaReembolsoChanging(value);
					this.SendPropertyChanging();
					this._ContaReembolso = value;
					this.SendPropertyChanged("ContaReembolso");
					this.OnContaReembolsoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Passageiro", Storage="_Passageiros", ThisKey="IDCliente", OtherKey="IdPassageiro")]
		public EntitySet<Passageiro> Passageiros
		{
			get
			{
				return this._Passageiros;
			}
			set
			{
				this._Passageiros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ContatoCliente", Storage="_ContatoClientes", ThisKey="IDCliente", OtherKey="IdCliente")]
		public EntitySet<ContatoCliente> ContatoClientes
		{
			get
			{
				return this._ContatoClientes;
			}
			set
			{
				this._ContatoClientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venda", Storage="_Vendas", ThisKey="IDCliente", OtherKey="IdCliente")]
		public EntitySet<Venda> Vendas
		{
			get
			{
				return this._Vendas;
			}
			set
			{
				this._Vendas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Cliente", Storage="_Clientes", ThisKey="IDCliente", OtherKey="IdResp")]
		public EntitySet<Cliente> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Cliente", Storage="_Cidade", ThisKey="IdCidade", OtherKey="IdCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._IdCidade = value.IdCidade;
					}
					else
					{
						this._IdCidade = default(Nullable<long>);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Cliente", Storage="_Cliente1", ThisKey="IdResp", OtherKey="IDCliente", IsForeignKey=true)]
		public Cliente Cliente1
		{
			get
			{
				return this._Cliente1.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente1.Entity;
				if (((previousValue != value) 
							|| (this._Cliente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente1.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Cliente1.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._IdResp = value.IDCliente;
					}
					else
					{
						this._IdResp = default(Nullable<long>);
					}
					this.SendPropertyChanged("Cliente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Passageiros(Passageiro entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Passageiros(Passageiro entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_ContatoClientes(ContatoCliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_ContatoClientes(ContatoCliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_Vendas(Venda entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente1 = this;
		}
		
		private void detach_Clientes(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoricoVenda")]
	public partial class HistoricoVenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IdHistoricoVenda;
		
		private char _TipoRegistro;
		
		private string _Registro;
		
		private System.DateTime _DtRegistro;
		
		private long _IdVenda;
		
		private EntityRef<Venda> _Venda;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHistoricoVendaChanging(long value);
    partial void OnIdHistoricoVendaChanged();
    partial void OnTipoRegistroChanging(char value);
    partial void OnTipoRegistroChanged();
    partial void OnRegistroChanging(string value);
    partial void OnRegistroChanged();
    partial void OnDtRegistroChanging(System.DateTime value);
    partial void OnDtRegistroChanged();
    partial void OnIdVendaChanging(long value);
    partial void OnIdVendaChanged();
    #endregion
		
		public HistoricoVenda()
		{
			this._Venda = default(EntityRef<Venda>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistoricoVenda", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IdHistoricoVenda
		{
			get
			{
				return this._IdHistoricoVenda;
			}
			set
			{
				if ((this._IdHistoricoVenda != value))
				{
					this.OnIdHistoricoVendaChanging(value);
					this.SendPropertyChanging();
					this._IdHistoricoVenda = value;
					this.SendPropertyChanged("IdHistoricoVenda");
					this.OnIdHistoricoVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoRegistro", DbType="Char(1) NOT NULL")]
		public char TipoRegistro
		{
			get
			{
				return this._TipoRegistro;
			}
			set
			{
				if ((this._TipoRegistro != value))
				{
					this.OnTipoRegistroChanging(value);
					this.SendPropertyChanging();
					this._TipoRegistro = value;
					this.SendPropertyChanged("TipoRegistro");
					this.OnTipoRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Registro", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Registro
		{
			get
			{
				return this._Registro;
			}
			set
			{
				if ((this._Registro != value))
				{
					this.OnRegistroChanging(value);
					this.SendPropertyChanging();
					this._Registro = value;
					this.SendPropertyChanged("Registro");
					this.OnRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtRegistro", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DtRegistro
		{
			get
			{
				return this._DtRegistro;
			}
			set
			{
				if ((this._DtRegistro != value))
				{
					this.OnDtRegistroChanging(value);
					this.SendPropertyChanging();
					this._DtRegistro = value;
					this.SendPropertyChanged("DtRegistro");
					this.OnDtRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdVenda", DbType="BigInt NOT NULL")]
		public long IdVenda
		{
			get
			{
				return this._IdVenda;
			}
			set
			{
				if ((this._IdVenda != value))
				{
					if (this._Venda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdVendaChanging(value);
					this.SendPropertyChanging();
					this._IdVenda = value;
					this.SendPropertyChanged("IdVenda");
					this.OnIdVendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venda_HistoricoVenda", Storage="_Venda", ThisKey="IdVenda", OtherKey="IdVenda", IsForeignKey=true)]
		public Venda Venda
		{
			get
			{
				return this._Venda.Entity;
			}
			set
			{
				Venda previousValue = this._Venda.Entity;
				if (((previousValue != value) 
							|| (this._Venda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venda.Entity = null;
						previousValue.HistoricoVendas.Remove(this);
					}
					this._Venda.Entity = value;
					if ((value != null))
					{
						value.HistoricoVendas.Add(this);
						this._IdVenda = value.IdVenda;
					}
					else
					{
						this._IdVenda = default(long);
					}
					this.SendPropertyChanged("Venda");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
